package emoji

// generated by github.com/clipperhouse/uax29
// from https://unicode.org/Public/emoji/12.0/emoji-data.txt
var (
	bEmoji                 = 1
	bEmoji_Component       = 2
	bEmoji_Modifier        = 4
	bEmoji_Modifier_Base   = 8
	bEmoji_Presentation    = 16
	bExtended_Pictographic = 32
)

// lookup returns the trie value for the first UTF-8 encoding in s and
// the width in bytes of this encoding. The size will be 0 if s does not
// hold enough bytes to complete the encoding. len(s) must be greater than 0.
func (t *emojiTrie) lookup(s []byte) (v uint8, sz int) {
	c0 := s[0]
	switch {
	case c0 < 0x80: // is ASCII
		return emojiValues[c0], 1
	case c0 < 0xC2:
		return 0, 1 // Illegal UTF-8: not a starter, not ASCII.
	case c0 < 0xE0: // 2-byte UTF-8
		if len(s) < 2 {
			return 0, 0
		}
		i := emojiIndex[c0]
		c1 := s[1]
		if c1 < 0x80 || 0xC0 <= c1 {
			return 0, 1 // Illegal UTF-8: not a continuation byte.
		}
		return t.lookupValue(uint32(i), c1), 2
	case c0 < 0xF0: // 3-byte UTF-8
		if len(s) < 3 {
			return 0, 0
		}
		i := emojiIndex[c0]
		c1 := s[1]
		if c1 < 0x80 || 0xC0 <= c1 {
			return 0, 1 // Illegal UTF-8: not a continuation byte.
		}
		o := uint32(i)<<6 + uint32(c1)
		i = emojiIndex[o]
		c2 := s[2]
		if c2 < 0x80 || 0xC0 <= c2 {
			return 0, 2 // Illegal UTF-8: not a continuation byte.
		}
		return t.lookupValue(uint32(i), c2), 3
	case c0 < 0xF8: // 4-byte UTF-8
		if len(s) < 4 {
			return 0, 0
		}
		i := emojiIndex[c0]
		c1 := s[1]
		if c1 < 0x80 || 0xC0 <= c1 {
			return 0, 1 // Illegal UTF-8: not a continuation byte.
		}
		o := uint32(i)<<6 + uint32(c1)
		i = emojiIndex[o]
		c2 := s[2]
		if c2 < 0x80 || 0xC0 <= c2 {
			return 0, 2 // Illegal UTF-8: not a continuation byte.
		}
		o = uint32(i)<<6 + uint32(c2)
		i = emojiIndex[o]
		c3 := s[3]
		if c3 < 0x80 || 0xC0 <= c3 {
			return 0, 3 // Illegal UTF-8: not a continuation byte.
		}
		return t.lookupValue(uint32(i), c3), 4
	}
	// Illegal rune
	return 0, 1
}

// lookupUnsafe returns the trie value for the first UTF-8 encoding in s.
// s must start with a full and valid UTF-8 encoded rune.
func (t *emojiTrie) lookupUnsafe(s []byte) uint8 {
	c0 := s[0]
	if c0 < 0x80 { // is ASCII
		return emojiValues[c0]
	}
	i := emojiIndex[c0]
	if c0 < 0xE0 { // 2-byte UTF-8
		return t.lookupValue(uint32(i), s[1])
	}
	i = emojiIndex[uint32(i)<<6+uint32(s[1])]
	if c0 < 0xF0 { // 3-byte UTF-8
		return t.lookupValue(uint32(i), s[2])
	}
	i = emojiIndex[uint32(i)<<6+uint32(s[2])]
	if c0 < 0xF8 { // 4-byte UTF-8
		return t.lookupValue(uint32(i), s[3])
	}
	return 0
}

// lookupString returns the trie value for the first UTF-8 encoding in s and
// the width in bytes of this encoding. The size will be 0 if s does not
// hold enough bytes to complete the encoding. len(s) must be greater than 0.
func (t *emojiTrie) lookupString(s string) (v uint8, sz int) {
	c0 := s[0]
	switch {
	case c0 < 0x80: // is ASCII
		return emojiValues[c0], 1
	case c0 < 0xC2:
		return 0, 1 // Illegal UTF-8: not a starter, not ASCII.
	case c0 < 0xE0: // 2-byte UTF-8
		if len(s) < 2 {
			return 0, 0
		}
		i := emojiIndex[c0]
		c1 := s[1]
		if c1 < 0x80 || 0xC0 <= c1 {
			return 0, 1 // Illegal UTF-8: not a continuation byte.
		}
		return t.lookupValue(uint32(i), c1), 2
	case c0 < 0xF0: // 3-byte UTF-8
		if len(s) < 3 {
			return 0, 0
		}
		i := emojiIndex[c0]
		c1 := s[1]
		if c1 < 0x80 || 0xC0 <= c1 {
			return 0, 1 // Illegal UTF-8: not a continuation byte.
		}
		o := uint32(i)<<6 + uint32(c1)
		i = emojiIndex[o]
		c2 := s[2]
		if c2 < 0x80 || 0xC0 <= c2 {
			return 0, 2 // Illegal UTF-8: not a continuation byte.
		}
		return t.lookupValue(uint32(i), c2), 3
	case c0 < 0xF8: // 4-byte UTF-8
		if len(s) < 4 {
			return 0, 0
		}
		i := emojiIndex[c0]
		c1 := s[1]
		if c1 < 0x80 || 0xC0 <= c1 {
			return 0, 1 // Illegal UTF-8: not a continuation byte.
		}
		o := uint32(i)<<6 + uint32(c1)
		i = emojiIndex[o]
		c2 := s[2]
		if c2 < 0x80 || 0xC0 <= c2 {
			return 0, 2 // Illegal UTF-8: not a continuation byte.
		}
		o = uint32(i)<<6 + uint32(c2)
		i = emojiIndex[o]
		c3 := s[3]
		if c3 < 0x80 || 0xC0 <= c3 {
			return 0, 3 // Illegal UTF-8: not a continuation byte.
		}
		return t.lookupValue(uint32(i), c3), 4
	}
	// Illegal rune
	return 0, 1
}

// lookupStringUnsafe returns the trie value for the first UTF-8 encoding in s.
// s must start with a full and valid UTF-8 encoded rune.
func (t *emojiTrie) lookupStringUnsafe(s string) uint8 {
	c0 := s[0]
	if c0 < 0x80 { // is ASCII
		return emojiValues[c0]
	}
	i := emojiIndex[c0]
	if c0 < 0xE0 { // 2-byte UTF-8
		return t.lookupValue(uint32(i), s[1])
	}
	i = emojiIndex[uint32(i)<<6+uint32(s[1])]
	if c0 < 0xF0 { // 3-byte UTF-8
		return t.lookupValue(uint32(i), s[2])
	}
	i = emojiIndex[uint32(i)<<6+uint32(s[2])]
	if c0 < 0xF8 { // 4-byte UTF-8
		return t.lookupValue(uint32(i), s[3])
	}
	return 0
}

// emojiTrie. Total size: 4992 bytes (4.88 KiB). Checksum: 47d09e2e81a66e7f.
type emojiTrie struct{}

func newEmojiTrie(i int) *emojiTrie {
	return &emojiTrie{}
}

// lookupValue determines the type of block n and looks up the value for b.
func (t *emojiTrie) lookupValue(n uint32, b byte) uint8 {
	switch {
	default:
		return uint8(emojiValues[n<<6+uint32(b)])
	}
}

// emojiValues: 67 blocks, 4288 entries, 4288 bytes
// The third block is the zero block.
var emojiValues = [4288]uint8{
	// Block 0x0, offset 0x0
	0x23: 0x0003,
	0x2a: 0x0003,
	0x30: 0x0003, 0x31: 0x0003, 0x32: 0x0003, 0x33: 0x0003, 0x34: 0x0003, 0x35: 0x0003,
	0x36: 0x0003, 0x37: 0x0003, 0x38: 0x0003, 0x39: 0x0003,
	// Block 0x1, offset 0x40
	// Block 0x2, offset 0x80
	// Block 0x3, offset 0xc0
	0xe9: 0x0021,
	0xee: 0x0021,
	// Block 0x4, offset 0x100
	0x10d: 0x0002,
	0x13c: 0x0021,
	// Block 0x5, offset 0x140
	0x149: 0x0021,
	// Block 0x6, offset 0x180
	0x1a3: 0x0002,
	// Block 0x7, offset 0x1c0
	0x1e2: 0x0021,
	0x1f9: 0x0021,
	// Block 0x8, offset 0x200
	0x214: 0x0021, 0x215: 0x0021, 0x216: 0x0021, 0x217: 0x0021,
	0x218: 0x0021, 0x219: 0x0021,
	0x229: 0x0021,
	0x22a: 0x0021,
	// Block 0x9, offset 0x240
	0x25a: 0x0031, 0x25b: 0x0031,
	0x268: 0x0021,
	// Block 0xa, offset 0x280
	0x288: 0x0020,
	// Block 0xb, offset 0x2c0
	0x2cf: 0x0021,
	0x2e9: 0x0031,
	0x2ea: 0x0031, 0x2eb: 0x0031, 0x2ec: 0x0031, 0x2ed: 0x0021, 0x2ee: 0x0021, 0x2ef: 0x0021,
	0x2f0: 0x0031, 0x2f1: 0x0021, 0x2f2: 0x0021, 0x2f3: 0x0031,
	0x2f8: 0x0021, 0x2f9: 0x0021, 0x2fa: 0x0021,
	// Block 0xc, offset 0x300
	0x302: 0x0021,
	// Block 0xd, offset 0x340
	0x36a: 0x0021, 0x36b: 0x0021,
	0x376: 0x0021,
	// Block 0xe, offset 0x380
	0x380: 0x0021,
	0x3bb: 0x0021,
	0x3bc: 0x0021, 0x3bd: 0x0031, 0x3be: 0x0031,
	// Block 0xf, offset 0x3c0
	0x3c0: 0x0021, 0x3c1: 0x0021, 0x3c2: 0x0021, 0x3c3: 0x0021, 0x3c4: 0x0021, 0x3c5: 0x0020,
	0x3c7: 0x0020, 0x3c8: 0x0020, 0x3c9: 0x0020, 0x3ca: 0x0020, 0x3cb: 0x0020,
	0x3cc: 0x0020, 0x3cd: 0x0020, 0x3ce: 0x0021, 0x3cf: 0x0020, 0x3d0: 0x0020, 0x3d1: 0x0021,
	0x3d2: 0x0020, 0x3d4: 0x0031, 0x3d5: 0x0031, 0x3d6: 0x0020, 0x3d7: 0x0020,
	0x3d8: 0x0021, 0x3d9: 0x0020, 0x3da: 0x0020, 0x3db: 0x0020, 0x3dc: 0x0020, 0x3dd: 0x0029,
	0x3de: 0x0020, 0x3df: 0x0020, 0x3e0: 0x0021, 0x3e1: 0x0020, 0x3e2: 0x0021, 0x3e3: 0x0021,
	0x3e4: 0x0020, 0x3e5: 0x0020, 0x3e6: 0x0021, 0x3e7: 0x0020, 0x3e8: 0x0020, 0x3e9: 0x0020,
	0x3ea: 0x0021, 0x3eb: 0x0020, 0x3ec: 0x0020, 0x3ed: 0x0020, 0x3ee: 0x0021, 0x3ef: 0x0021,
	0x3f0: 0x0020, 0x3f1: 0x0020, 0x3f2: 0x0020, 0x3f3: 0x0020, 0x3f4: 0x0020, 0x3f5: 0x0020,
	0x3f6: 0x0020, 0x3f7: 0x0020, 0x3f8: 0x0021, 0x3f9: 0x0021, 0x3fa: 0x0021, 0x3fb: 0x0020,
	0x3fc: 0x0020, 0x3fd: 0x0020, 0x3fe: 0x0020, 0x3ff: 0x0020,
	// Block 0x10, offset 0x400
	0x400: 0x0021, 0x401: 0x0020, 0x402: 0x0021, 0x403: 0x0020, 0x404: 0x0020, 0x405: 0x0020,
	0x406: 0x0020, 0x407: 0x0020, 0x408: 0x0031, 0x409: 0x0031, 0x40a: 0x0031, 0x40b: 0x0031,
	0x40c: 0x0031, 0x40d: 0x0031, 0x40e: 0x0031, 0x40f: 0x0031, 0x410: 0x0031, 0x411: 0x0031,
	0x412: 0x0031, 0x413: 0x0031, 0x414: 0x0020, 0x415: 0x0020, 0x416: 0x0020, 0x417: 0x0020,
	0x418: 0x0020, 0x419: 0x0020, 0x41a: 0x0020, 0x41b: 0x0020, 0x41c: 0x0020, 0x41d: 0x0020,
	0x41e: 0x0020, 0x41f: 0x0021, 0x420: 0x0021, 0x421: 0x0020, 0x422: 0x0020, 0x423: 0x0021,
	0x424: 0x0020, 0x425: 0x0021, 0x426: 0x0021, 0x427: 0x0020, 0x428: 0x0021, 0x429: 0x0020,
	0x42a: 0x0020, 0x42b: 0x0020, 0x42c: 0x0020, 0x42d: 0x0020, 0x42e: 0x0020, 0x42f: 0x0020,
	0x430: 0x0020, 0x431: 0x0020, 0x432: 0x0020, 0x433: 0x0020, 0x434: 0x0020, 0x435: 0x0020,
	0x436: 0x0020, 0x437: 0x0020, 0x438: 0x0020, 0x439: 0x0020, 0x43a: 0x0020, 0x43b: 0x0021,
	0x43c: 0x0020, 0x43d: 0x0020, 0x43e: 0x0021, 0x43f: 0x0031,
	// Block 0x11, offset 0x440
	0x440: 0x0020, 0x441: 0x0020, 0x442: 0x0020, 0x443: 0x0020, 0x444: 0x0020, 0x445: 0x0020,
	0x450: 0x0020, 0x451: 0x0020,
	0x452: 0x0021, 0x453: 0x0031, 0x454: 0x0021, 0x455: 0x0021, 0x456: 0x0021, 0x457: 0x0021,
	0x458: 0x0020, 0x459: 0x0021, 0x45a: 0x0020, 0x45b: 0x0021, 0x45c: 0x0021, 0x45d: 0x0020,
	0x45e: 0x0020, 0x45f: 0x0020, 0x460: 0x0021, 0x461: 0x0031, 0x462: 0x0020, 0x463: 0x0020,
	0x464: 0x0020, 0x465: 0x0020, 0x466: 0x0020, 0x467: 0x0020, 0x468: 0x0020, 0x469: 0x0020,
	0x46a: 0x0031, 0x46b: 0x0031, 0x46c: 0x0020, 0x46d: 0x0020, 0x46e: 0x0020, 0x46f: 0x0020,
	0x470: 0x0021, 0x471: 0x0021, 0x472: 0x0020, 0x473: 0x0020, 0x474: 0x0020, 0x475: 0x0020,
	0x476: 0x0020, 0x477: 0x0020, 0x478: 0x0020, 0x479: 0x0020, 0x47a: 0x0020, 0x47b: 0x0020,
	0x47c: 0x0020, 0x47d: 0x0031, 0x47e: 0x0031, 0x47f: 0x0020,
	// Block 0x12, offset 0x480
	0x480: 0x0020, 0x481: 0x0020, 0x482: 0x0020, 0x483: 0x0020, 0x484: 0x0031, 0x485: 0x0031,
	0x486: 0x0020, 0x487: 0x0020, 0x488: 0x0021, 0x489: 0x0020, 0x48a: 0x0020, 0x48b: 0x0020,
	0x48c: 0x0020, 0x48d: 0x0020, 0x48e: 0x0031, 0x48f: 0x0021, 0x490: 0x0020, 0x491: 0x0021,
	0x492: 0x0020, 0x493: 0x0021, 0x494: 0x0031, 0x495: 0x0020, 0x496: 0x0020, 0x497: 0x0020,
	0x498: 0x0020, 0x499: 0x0020, 0x49a: 0x0020, 0x49b: 0x0020, 0x49c: 0x0020, 0x49d: 0x0020,
	0x49e: 0x0020, 0x49f: 0x0020, 0x4a0: 0x0020, 0x4a1: 0x0020, 0x4a2: 0x0020, 0x4a3: 0x0020,
	0x4a4: 0x0020, 0x4a5: 0x0020, 0x4a6: 0x0020, 0x4a7: 0x0020, 0x4a8: 0x0020, 0x4a9: 0x0021,
	0x4aa: 0x0031, 0x4ab: 0x0020, 0x4ac: 0x0020, 0x4ad: 0x0020, 0x4ae: 0x0020, 0x4af: 0x0020,
	0x4b0: 0x0021, 0x4b1: 0x0021, 0x4b2: 0x0031, 0x4b3: 0x0031, 0x4b4: 0x0021, 0x4b5: 0x0031,
	0x4b6: 0x0020, 0x4b7: 0x0021, 0x4b8: 0x0021, 0x4b9: 0x0029, 0x4ba: 0x0031, 0x4bb: 0x0020,
	0x4bc: 0x0020, 0x4bd: 0x0031, 0x4be: 0x0020, 0x4bf: 0x0020,
	// Block 0x13, offset 0x4c0
	0x4c0: 0x0020, 0x4c1: 0x0020, 0x4c2: 0x0021, 0x4c3: 0x0020, 0x4c4: 0x0020, 0x4c5: 0x0031,
	0x4c8: 0x0021, 0x4c9: 0x0021, 0x4ca: 0x0039, 0x4cb: 0x0039,
	0x4cc: 0x0029, 0x4cd: 0x0029, 0x4ce: 0x0020, 0x4cf: 0x0021, 0x4d0: 0x0020, 0x4d1: 0x0020,
	0x4d2: 0x0021, 0x4d4: 0x0021, 0x4d6: 0x0021,
	0x4dd: 0x0021,
	0x4e1: 0x0021,
	0x4e8: 0x0031,
	0x4f3: 0x0021, 0x4f4: 0x0021,
	// Block 0x14, offset 0x500
	0x504: 0x0021,
	0x507: 0x0021,
	0x50c: 0x0031, 0x50e: 0x0031,
	0x513: 0x0031, 0x514: 0x0031, 0x515: 0x0031, 0x517: 0x0031,
	0x523: 0x0021,
	0x524: 0x0021, 0x525: 0x0020, 0x526: 0x0020, 0x527: 0x0020,
	// Block 0x15, offset 0x540
	0x555: 0x0031, 0x556: 0x0031, 0x557: 0x0031,
	0x561: 0x0021,
	0x570: 0x0031,
	0x57f: 0x0031,
	// Block 0x16, offset 0x580
	0x5b4: 0x0021, 0x5b5: 0x0021,
	// Block 0x17, offset 0x5c0
	0x5c5: 0x0021,
	0x5c6: 0x0021, 0x5c7: 0x0021,
	0x5db: 0x0031, 0x5dc: 0x0031,
	// Block 0x18, offset 0x600
	0x610: 0x0031,
	0x615: 0x0031,
	// Block 0x19, offset 0x640
	0x670: 0x0021,
	0x67d: 0x0021,
	// Block 0x1a, offset 0x680
	0x697: 0x0021,
	0x699: 0x0021,
	// Block 0x1b, offset 0x6c0
	0x6cf: 0x0002,
	// Block 0x1c, offset 0x700
	0x700: 0x0020, 0x701: 0x0020, 0x702: 0x0020, 0x703: 0x0020, 0x704: 0x0031, 0x705: 0x0020,
	0x706: 0x0020, 0x707: 0x0020, 0x708: 0x0020, 0x709: 0x0020, 0x70a: 0x0020, 0x70b: 0x0020,
	0x70c: 0x0020, 0x70d: 0x0020, 0x70e: 0x0020, 0x70f: 0x0020, 0x710: 0x0020, 0x711: 0x0020,
	0x712: 0x0020, 0x713: 0x0020, 0x714: 0x0020, 0x715: 0x0020, 0x716: 0x0020, 0x717: 0x0020,
	0x718: 0x0020, 0x719: 0x0020, 0x71a: 0x0020, 0x71b: 0x0020, 0x71c: 0x0020, 0x71d: 0x0020,
	0x71e: 0x0020, 0x71f: 0x0020, 0x720: 0x0020, 0x721: 0x0020, 0x722: 0x0020, 0x723: 0x0020,
	0x724: 0x0020, 0x725: 0x0020, 0x726: 0x0020, 0x727: 0x0020, 0x728: 0x0020, 0x729: 0x0020,
	0x72a: 0x0020, 0x72b: 0x0020, 0x72c: 0x0020, 0x72d: 0x0020, 0x72e: 0x0020, 0x72f: 0x0020,
	0x730: 0x0020, 0x731: 0x0020, 0x732: 0x0020, 0x733: 0x0020, 0x734: 0x0020, 0x735: 0x0020,
	0x736: 0x0020, 0x737: 0x0020, 0x738: 0x0020, 0x739: 0x0020, 0x73a: 0x0020, 0x73b: 0x0020,
	0x73c: 0x0020, 0x73d: 0x0020, 0x73e: 0x0020, 0x73f: 0x0020,
	// Block 0x1d, offset 0x740
	0x740: 0x0020, 0x741: 0x0020, 0x742: 0x0020, 0x743: 0x0020, 0x744: 0x0020, 0x745: 0x0020,
	0x746: 0x0020, 0x747: 0x0020, 0x748: 0x0020, 0x749: 0x0020, 0x74a: 0x0020, 0x74b: 0x0020,
	0x74c: 0x0020, 0x74d: 0x0020, 0x74e: 0x0020, 0x74f: 0x0020, 0x750: 0x0020, 0x751: 0x0020,
	0x752: 0x0020, 0x753: 0x0020, 0x754: 0x0020, 0x755: 0x0020, 0x756: 0x0020, 0x757: 0x0020,
	0x758: 0x0020, 0x759: 0x0020, 0x75a: 0x0020, 0x75b: 0x0020, 0x75c: 0x0020, 0x75d: 0x0020,
	0x75e: 0x0020, 0x75f: 0x0020, 0x760: 0x0020, 0x761: 0x0020, 0x762: 0x0020, 0x763: 0x0020,
	0x764: 0x0020, 0x765: 0x0020, 0x766: 0x0020, 0x767: 0x0020, 0x768: 0x0020, 0x769: 0x0020,
	0x76a: 0x0020, 0x76b: 0x0020, 0x76c: 0x0020, 0x76d: 0x0020, 0x76e: 0x0020, 0x76f: 0x0020,
	0x770: 0x0020, 0x771: 0x0020, 0x772: 0x0020, 0x773: 0x0020, 0x774: 0x0020, 0x775: 0x0020,
	0x776: 0x0020, 0x777: 0x0020, 0x778: 0x0020, 0x779: 0x0020, 0x77a: 0x0020, 0x77b: 0x0020,
	0x77c: 0x0020, 0x77d: 0x0020, 0x77e: 0x0020, 0x77f: 0x0020,
	// Block 0x1e, offset 0x780
	0x780: 0x0020, 0x781: 0x0020, 0x782: 0x0020, 0x783: 0x0020, 0x784: 0x0020, 0x785: 0x0020,
	0x786: 0x0020, 0x787: 0x0020, 0x788: 0x0020, 0x789: 0x0020, 0x78a: 0x0020, 0x78b: 0x0020,
	0x78c: 0x0020, 0x78d: 0x0020, 0x78e: 0x0020, 0x78f: 0x0031, 0x790: 0x0020, 0x791: 0x0020,
	0x792: 0x0020, 0x793: 0x0020, 0x794: 0x0020, 0x795: 0x0020, 0x796: 0x0020, 0x797: 0x0020,
	0x798: 0x0020, 0x799: 0x0020, 0x79a: 0x0020, 0x79b: 0x0020, 0x79c: 0x0020, 0x79d: 0x0020,
	0x79e: 0x0020, 0x79f: 0x0020, 0x7a0: 0x0020, 0x7a1: 0x0020, 0x7a2: 0x0020, 0x7a3: 0x0020,
	0x7a4: 0x0020, 0x7a5: 0x0020, 0x7a6: 0x0020, 0x7a7: 0x0020, 0x7a8: 0x0020, 0x7a9: 0x0020,
	0x7aa: 0x0020, 0x7ab: 0x0020, 0x7ac: 0x0020, 0x7ad: 0x0020, 0x7ae: 0x0020, 0x7af: 0x0020,
	0x7b0: 0x0020, 0x7b1: 0x0020, 0x7b2: 0x0020, 0x7b3: 0x0020, 0x7b4: 0x0020, 0x7b5: 0x0020,
	0x7b6: 0x0020, 0x7b7: 0x0020, 0x7b8: 0x0020, 0x7b9: 0x0020, 0x7ba: 0x0020, 0x7bb: 0x0020,
	0x7bc: 0x0020, 0x7bd: 0x0020, 0x7be: 0x0020, 0x7bf: 0x0020,
	// Block 0x1f, offset 0x7c0
	0x7cd: 0x0020, 0x7ce: 0x0020, 0x7cf: 0x0020,
	0x7ef: 0x0020,
	// Block 0x20, offset 0x800
	0x82c: 0x0020, 0x82d: 0x0020, 0x82e: 0x0020, 0x82f: 0x0020,
	0x830: 0x0021, 0x831: 0x0021,
	0x83e: 0x0021, 0x83f: 0x0021,
	// Block 0x21, offset 0x840
	0x84e: 0x0031, 0x851: 0x0031,
	0x852: 0x0031, 0x853: 0x0031, 0x854: 0x0031, 0x855: 0x0031, 0x856: 0x0031, 0x857: 0x0031,
	0x858: 0x0031, 0x859: 0x0031, 0x85a: 0x0031,
	0x86d: 0x0020, 0x86e: 0x0020, 0x86f: 0x0020,
	0x870: 0x0020, 0x871: 0x0020, 0x872: 0x0020, 0x873: 0x0020, 0x874: 0x0020, 0x875: 0x0020,
	0x876: 0x0020, 0x877: 0x0020, 0x878: 0x0020, 0x879: 0x0020, 0x87a: 0x0020, 0x87b: 0x0020,
	0x87c: 0x0020, 0x87d: 0x0020, 0x87e: 0x0020, 0x87f: 0x0020,
	// Block 0x22, offset 0x880
	0x880: 0x0020, 0x881: 0x0020, 0x882: 0x0020, 0x883: 0x0020, 0x884: 0x0020, 0x885: 0x0020,
	0x886: 0x0020, 0x887: 0x0020, 0x888: 0x0020, 0x889: 0x0020, 0x88a: 0x0020, 0x88b: 0x0020,
	0x88c: 0x0020, 0x88d: 0x0020, 0x88e: 0x0020, 0x88f: 0x0020, 0x890: 0x0020, 0x891: 0x0020,
	0x892: 0x0020, 0x893: 0x0020, 0x894: 0x0020, 0x895: 0x0020, 0x896: 0x0020, 0x897: 0x0020,
	0x898: 0x0020, 0x899: 0x0020, 0x89a: 0x0020, 0x89b: 0x0020, 0x89c: 0x0020, 0x89d: 0x0020,
	0x89e: 0x0020, 0x89f: 0x0020, 0x8a0: 0x0020, 0x8a1: 0x0020, 0x8a2: 0x0020, 0x8a3: 0x0020,
	0x8a4: 0x0020, 0x8a5: 0x0020, 0x8a6: 0x0013, 0x8a7: 0x0013, 0x8a8: 0x0013, 0x8a9: 0x0013,
	0x8aa: 0x0013, 0x8ab: 0x0013, 0x8ac: 0x0013, 0x8ad: 0x0013, 0x8ae: 0x0013, 0x8af: 0x0013,
	0x8b0: 0x0013, 0x8b1: 0x0013, 0x8b2: 0x0013, 0x8b3: 0x0013, 0x8b4: 0x0013, 0x8b5: 0x0013,
	0x8b6: 0x0013, 0x8b7: 0x0013, 0x8b8: 0x0013, 0x8b9: 0x0013, 0x8ba: 0x0013, 0x8bb: 0x0013,
	0x8bc: 0x0013, 0x8bd: 0x0013, 0x8be: 0x0013, 0x8bf: 0x0013,
	// Block 0x23, offset 0x8c0
	0x8c1: 0x0031, 0x8c2: 0x0021, 0x8c3: 0x0020, 0x8c4: 0x0020, 0x8c5: 0x0020,
	0x8c6: 0x0020, 0x8c7: 0x0020, 0x8c8: 0x0020, 0x8c9: 0x0020, 0x8ca: 0x0020, 0x8cb: 0x0020,
	0x8cc: 0x0020, 0x8cd: 0x0020, 0x8ce: 0x0020, 0x8cf: 0x0020,
	0x8da: 0x0031,
	0x8ef: 0x0031,
	0x8f2: 0x0031, 0x8f3: 0x0031, 0x8f4: 0x0031, 0x8f5: 0x0031,
	0x8f6: 0x0031, 0x8f7: 0x0021, 0x8f8: 0x0031, 0x8f9: 0x0031, 0x8fa: 0x0031,
	0x8fc: 0x0020, 0x8fd: 0x0020, 0x8fe: 0x0020, 0x8ff: 0x0020,
	// Block 0x24, offset 0x900
	0x909: 0x0020, 0x90a: 0x0020, 0x90b: 0x0020,
	0x90c: 0x0020, 0x90d: 0x0020, 0x90e: 0x0020, 0x90f: 0x0020, 0x910: 0x0031, 0x911: 0x0031,
	0x912: 0x0020, 0x913: 0x0020, 0x914: 0x0020, 0x915: 0x0020, 0x916: 0x0020, 0x917: 0x0020,
	0x918: 0x0020, 0x919: 0x0020, 0x91a: 0x0020, 0x91b: 0x0020, 0x91c: 0x0020, 0x91d: 0x0020,
	0x91e: 0x0020, 0x91f: 0x0020, 0x920: 0x0020, 0x921: 0x0020, 0x922: 0x0020, 0x923: 0x0020,
	0x924: 0x0020, 0x925: 0x0020, 0x926: 0x0020, 0x927: 0x0020, 0x928: 0x0020, 0x929: 0x0020,
	0x92a: 0x0020, 0x92b: 0x0020, 0x92c: 0x0020, 0x92d: 0x0020, 0x92e: 0x0020, 0x92f: 0x0020,
	0x930: 0x0020, 0x931: 0x0020, 0x932: 0x0020, 0x933: 0x0020, 0x934: 0x0020, 0x935: 0x0020,
	0x936: 0x0020, 0x937: 0x0020, 0x938: 0x0020, 0x939: 0x0020, 0x93a: 0x0020, 0x93b: 0x0020,
	0x93c: 0x0020, 0x93d: 0x0020, 0x93e: 0x0020, 0x93f: 0x0020,
	// Block 0x25, offset 0x940
	0x940: 0x0031, 0x941: 0x0031, 0x942: 0x0031, 0x943: 0x0031, 0x944: 0x0031, 0x945: 0x0031,
	0x946: 0x0031, 0x947: 0x0031, 0x948: 0x0031, 0x949: 0x0031, 0x94a: 0x0031, 0x94b: 0x0031,
	0x94c: 0x0031, 0x94d: 0x0031, 0x94e: 0x0031, 0x94f: 0x0031, 0x950: 0x0031, 0x951: 0x0031,
	0x952: 0x0031, 0x953: 0x0031, 0x954: 0x0031, 0x955: 0x0031, 0x956: 0x0031, 0x957: 0x0031,
	0x958: 0x0031, 0x959: 0x0031, 0x95a: 0x0031, 0x95b: 0x0031, 0x95c: 0x0031, 0x95d: 0x0031,
	0x95e: 0x0031, 0x95f: 0x0031, 0x960: 0x0031, 0x961: 0x0021, 0x962: 0x0020, 0x963: 0x0020,
	0x964: 0x0021, 0x965: 0x0021, 0x966: 0x0021, 0x967: 0x0021, 0x968: 0x0021, 0x969: 0x0021,
	0x96a: 0x0021, 0x96b: 0x0021, 0x96c: 0x0021, 0x96d: 0x0031, 0x96e: 0x0031, 0x96f: 0x0031,
	0x970: 0x0031, 0x971: 0x0031, 0x972: 0x0031, 0x973: 0x0031, 0x974: 0x0031, 0x975: 0x0031,
	0x976: 0x0021, 0x977: 0x0031, 0x978: 0x0031, 0x979: 0x0031, 0x97a: 0x0031, 0x97b: 0x0031,
	0x97c: 0x0031, 0x97d: 0x0031, 0x97e: 0x0031, 0x97f: 0x0031,
	// Block 0x26, offset 0x980
	0x980: 0x0031, 0x981: 0x0031, 0x982: 0x0031, 0x983: 0x0031, 0x984: 0x0031, 0x985: 0x0031,
	0x986: 0x0031, 0x987: 0x0031, 0x988: 0x0031, 0x989: 0x0031, 0x98a: 0x0031, 0x98b: 0x0031,
	0x98c: 0x0031, 0x98d: 0x0031, 0x98e: 0x0031, 0x98f: 0x0031, 0x990: 0x0031, 0x991: 0x0031,
	0x992: 0x0031, 0x993: 0x0031, 0x994: 0x0031, 0x995: 0x0031, 0x996: 0x0031, 0x997: 0x0031,
	0x998: 0x0031, 0x999: 0x0031, 0x99a: 0x0031, 0x99b: 0x0031, 0x99c: 0x0031, 0x99d: 0x0031,
	0x99e: 0x0031, 0x99f: 0x0031, 0x9a0: 0x0031, 0x9a1: 0x0031, 0x9a2: 0x0031, 0x9a3: 0x0031,
	0x9a4: 0x0031, 0x9a5: 0x0031, 0x9a6: 0x0031, 0x9a7: 0x0031, 0x9a8: 0x0031, 0x9a9: 0x0031,
	0x9aa: 0x0031, 0x9ab: 0x0031, 0x9ac: 0x0031, 0x9ad: 0x0031, 0x9ae: 0x0031, 0x9af: 0x0031,
	0x9b0: 0x0031, 0x9b1: 0x0031, 0x9b2: 0x0031, 0x9b3: 0x0031, 0x9b4: 0x0031, 0x9b5: 0x0031,
	0x9b6: 0x0031, 0x9b7: 0x0031, 0x9b8: 0x0031, 0x9b9: 0x0031, 0x9ba: 0x0031, 0x9bb: 0x0031,
	0x9bc: 0x0031, 0x9bd: 0x0021, 0x9be: 0x0031, 0x9bf: 0x0031,
	// Block 0x27, offset 0x9c0
	0x9c0: 0x0031, 0x9c1: 0x0031, 0x9c2: 0x0031, 0x9c3: 0x0031, 0x9c4: 0x0031, 0x9c5: 0x0039,
	0x9c6: 0x0031, 0x9c7: 0x0031, 0x9c8: 0x0031, 0x9c9: 0x0031, 0x9ca: 0x0031, 0x9cb: 0x0031,
	0x9cc: 0x0031, 0x9cd: 0x0031, 0x9ce: 0x0031, 0x9cf: 0x0031, 0x9d0: 0x0031, 0x9d1: 0x0031,
	0x9d2: 0x0031, 0x9d3: 0x0031, 0x9d4: 0x0020, 0x9d5: 0x0020, 0x9d6: 0x0021, 0x9d7: 0x0021,
	0x9d8: 0x0020, 0x9d9: 0x0021, 0x9da: 0x0021, 0x9db: 0x0021, 0x9dc: 0x0020, 0x9dd: 0x0020,
	0x9de: 0x0021, 0x9df: 0x0021, 0x9e0: 0x0031, 0x9e1: 0x0031, 0x9e2: 0x0031, 0x9e3: 0x0031,
	0x9e4: 0x0031, 0x9e5: 0x0031, 0x9e6: 0x0031, 0x9e7: 0x0031, 0x9e8: 0x0031, 0x9e9: 0x0031,
	0x9ea: 0x0031, 0x9eb: 0x0031, 0x9ec: 0x0031, 0x9ed: 0x0031, 0x9ee: 0x0031, 0x9ef: 0x0031,
	0x9f0: 0x0031, 0x9f1: 0x0031, 0x9f2: 0x0031, 0x9f3: 0x0031, 0x9f4: 0x0031, 0x9f5: 0x0031,
	0x9f6: 0x0031, 0x9f7: 0x0031, 0x9f8: 0x0031, 0x9f9: 0x0031, 0x9fa: 0x0031, 0x9fb: 0x0031,
	0x9fc: 0x0031, 0x9fd: 0x0031, 0x9fe: 0x0031, 0x9ff: 0x0031,
	// Block 0x28, offset 0xa00
	0xa00: 0x0031, 0xa01: 0x0031, 0xa02: 0x0039, 0xa03: 0x0039, 0xa04: 0x0039, 0xa05: 0x0031,
	0xa06: 0x0031, 0xa07: 0x0039, 0xa08: 0x0031, 0xa09: 0x0031, 0xa0a: 0x0039, 0xa0b: 0x0029,
	0xa0c: 0x0029, 0xa0d: 0x0021, 0xa0e: 0x0021, 0xa0f: 0x0031, 0xa10: 0x0031, 0xa11: 0x0031,
	0xa12: 0x0031, 0xa13: 0x0031, 0xa14: 0x0021, 0xa15: 0x0021, 0xa16: 0x0021, 0xa17: 0x0021,
	0xa18: 0x0021, 0xa19: 0x0021, 0xa1a: 0x0021, 0xa1b: 0x0021, 0xa1c: 0x0021, 0xa1d: 0x0021,
	0xa1e: 0x0021, 0xa1f: 0x0021, 0xa20: 0x0031, 0xa21: 0x0031, 0xa22: 0x0031, 0xa23: 0x0031,
	0xa24: 0x0031, 0xa25: 0x0031, 0xa26: 0x0031, 0xa27: 0x0031, 0xa28: 0x0031, 0xa29: 0x0031,
	0xa2a: 0x0031, 0xa2b: 0x0031, 0xa2c: 0x0031, 0xa2d: 0x0031, 0xa2e: 0x0031, 0xa2f: 0x0031,
	0xa30: 0x0031, 0xa31: 0x0020, 0xa32: 0x0020, 0xa33: 0x0021, 0xa34: 0x0031, 0xa35: 0x0021,
	0xa36: 0x0020, 0xa37: 0x0021, 0xa38: 0x0031, 0xa39: 0x0031, 0xa3a: 0x0031, 0xa3b: 0x0017,
	0xa3c: 0x0017, 0xa3d: 0x0017, 0xa3e: 0x0017, 0xa3f: 0x0017,
	// Block 0x29, offset 0xa40
	0xa40: 0x0031, 0xa41: 0x0031, 0xa42: 0x0031, 0xa43: 0x0031, 0xa44: 0x0031, 0xa45: 0x0031,
	0xa46: 0x0031, 0xa47: 0x0031, 0xa48: 0x0031, 0xa49: 0x0031, 0xa4a: 0x0031, 0xa4b: 0x0031,
	0xa4c: 0x0031, 0xa4d: 0x0031, 0xa4e: 0x0031, 0xa4f: 0x0031, 0xa50: 0x0031, 0xa51: 0x0031,
	0xa52: 0x0031, 0xa53: 0x0031, 0xa54: 0x0031, 0xa55: 0x0031, 0xa56: 0x0031, 0xa57: 0x0031,
	0xa58: 0x0031, 0xa59: 0x0031, 0xa5a: 0x0031, 0xa5b: 0x0031, 0xa5c: 0x0031, 0xa5d: 0x0031,
	0xa5e: 0x0031, 0xa5f: 0x0031, 0xa60: 0x0031, 0xa61: 0x0031, 0xa62: 0x0031, 0xa63: 0x0031,
	0xa64: 0x0031, 0xa65: 0x0031, 0xa66: 0x0031, 0xa67: 0x0031, 0xa68: 0x0031, 0xa69: 0x0031,
	0xa6a: 0x0031, 0xa6b: 0x0031, 0xa6c: 0x0031, 0xa6d: 0x0031, 0xa6e: 0x0031, 0xa6f: 0x0031,
	0xa70: 0x0031, 0xa71: 0x0031, 0xa72: 0x0031, 0xa73: 0x0031, 0xa74: 0x0031, 0xa75: 0x0031,
	0xa76: 0x0031, 0xa77: 0x0031, 0xa78: 0x0031, 0xa79: 0x0031, 0xa7a: 0x0031, 0xa7b: 0x0031,
	0xa7c: 0x0031, 0xa7d: 0x0031, 0xa7e: 0x0031, 0xa7f: 0x0021,
	// Block 0x2a, offset 0xa80
	0xa80: 0x0031, 0xa81: 0x0021, 0xa82: 0x0039, 0xa83: 0x0039, 0xa84: 0x0031, 0xa85: 0x0031,
	0xa86: 0x0039, 0xa87: 0x0039, 0xa88: 0x0039, 0xa89: 0x0039, 0xa8a: 0x0039, 0xa8b: 0x0039,
	0xa8c: 0x0039, 0xa8d: 0x0039, 0xa8e: 0x0039, 0xa8f: 0x0039, 0xa90: 0x0039, 0xa91: 0x0031,
	0xa92: 0x0031, 0xa93: 0x0031, 0xa94: 0x0031, 0xa95: 0x0031, 0xa96: 0x0031, 0xa97: 0x0031,
	0xa98: 0x0031, 0xa99: 0x0031, 0xa9a: 0x0031, 0xa9b: 0x0031, 0xa9c: 0x0031, 0xa9d: 0x0031,
	0xa9e: 0x0031, 0xa9f: 0x0031, 0xaa0: 0x0031, 0xaa1: 0x0031, 0xaa2: 0x0031, 0xaa3: 0x0031,
	0xaa4: 0x0031, 0xaa5: 0x0031, 0xaa6: 0x0039, 0xaa7: 0x0039, 0xaa8: 0x0039, 0xaa9: 0x0039,
	0xaaa: 0x0039, 0xaab: 0x0039, 0xaac: 0x0039, 0xaad: 0x0039, 0xaae: 0x0039, 0xaaf: 0x0039,
	0xab0: 0x0039, 0xab1: 0x0039, 0xab2: 0x0039, 0xab3: 0x0039, 0xab4: 0x0039, 0xab5: 0x0039,
	0xab6: 0x0039, 0xab7: 0x0039, 0xab8: 0x0039, 0xab9: 0x0031, 0xaba: 0x0031, 0xabb: 0x0031,
	0xabc: 0x0039, 0xabd: 0x0031, 0xabe: 0x0031, 0xabf: 0x0031,
	// Block 0x2b, offset 0xac0
	0xac0: 0x0031, 0xac1: 0x0039, 0xac2: 0x0039, 0xac3: 0x0039, 0xac4: 0x0031, 0xac5: 0x0039,
	0xac6: 0x0039, 0xac7: 0x0039, 0xac8: 0x0031, 0xac9: 0x0031, 0xaca: 0x0031, 0xacb: 0x0031,
	0xacc: 0x0031, 0xacd: 0x0031, 0xace: 0x0031, 0xacf: 0x0039, 0xad0: 0x0031, 0xad1: 0x0039,
	0xad2: 0x0031, 0xad3: 0x0031, 0xad4: 0x0031, 0xad5: 0x0031, 0xad6: 0x0031, 0xad7: 0x0031,
	0xad8: 0x0031, 0xad9: 0x0031, 0xada: 0x0031, 0xadb: 0x0031, 0xadc: 0x0031, 0xadd: 0x0031,
	0xade: 0x0031, 0xadf: 0x0031, 0xae0: 0x0031, 0xae1: 0x0031, 0xae2: 0x0031, 0xae3: 0x0031,
	0xae4: 0x0031, 0xae5: 0x0031, 0xae6: 0x0031, 0xae7: 0x0031, 0xae8: 0x0031, 0xae9: 0x0031,
	0xaea: 0x0039, 0xaeb: 0x0031, 0xaec: 0x0031, 0xaed: 0x0031, 0xaee: 0x0031, 0xaef: 0x0031,
	0xaf0: 0x0031, 0xaf1: 0x0031, 0xaf2: 0x0031, 0xaf3: 0x0031, 0xaf4: 0x0031, 0xaf5: 0x0031,
	0xaf6: 0x0031, 0xaf7: 0x0031, 0xaf8: 0x0031, 0xaf9: 0x0031, 0xafa: 0x0031, 0xafb: 0x0031,
	0xafc: 0x0031, 0xafd: 0x0031, 0xafe: 0x0031, 0xaff: 0x0031,
	// Block 0x2c, offset 0xb00
	0xb00: 0x0031, 0xb01: 0x0031, 0xb02: 0x0031, 0xb03: 0x0031, 0xb04: 0x0031, 0xb05: 0x0031,
	0xb06: 0x0031, 0xb07: 0x0031, 0xb08: 0x0031, 0xb09: 0x0031, 0xb0a: 0x0031, 0xb0b: 0x0031,
	0xb0c: 0x0031, 0xb0d: 0x0031, 0xb0e: 0x0031, 0xb0f: 0x0031, 0xb10: 0x0031, 0xb11: 0x0031,
	0xb12: 0x0031, 0xb13: 0x0031, 0xb14: 0x0031, 0xb15: 0x0031, 0xb16: 0x0031, 0xb17: 0x0031,
	0xb18: 0x0031, 0xb19: 0x0031, 0xb1a: 0x0031, 0xb1b: 0x0031, 0xb1c: 0x0031, 0xb1d: 0x0031,
	0xb1e: 0x0031, 0xb1f: 0x0031, 0xb20: 0x0031, 0xb21: 0x0031, 0xb22: 0x0031, 0xb23: 0x0031,
	0xb24: 0x0031, 0xb25: 0x0031, 0xb26: 0x0031, 0xb27: 0x0031, 0xb28: 0x0031, 0xb29: 0x0031,
	0xb2a: 0x0031, 0xb2b: 0x0031, 0xb2c: 0x0031, 0xb2d: 0x0031, 0xb2e: 0x0031, 0xb2f: 0x0031,
	0xb30: 0x0031, 0xb31: 0x0031, 0xb32: 0x0031, 0xb33: 0x0031, 0xb34: 0x0031, 0xb35: 0x0031,
	0xb36: 0x0031, 0xb37: 0x0031, 0xb38: 0x0031, 0xb39: 0x0031, 0xb3a: 0x0031, 0xb3b: 0x0031,
	0xb3c: 0x0031, 0xb3d: 0x0021, 0xb3e: 0x0020, 0xb3f: 0x0031,
	// Block 0x2d, offset 0xb40
	0xb40: 0x0031, 0xb41: 0x0031, 0xb42: 0x0031, 0xb43: 0x0031, 0xb44: 0x0031, 0xb45: 0x0031,
	0xb46: 0x0031, 0xb47: 0x0031, 0xb48: 0x0031, 0xb49: 0x0031, 0xb4a: 0x0031, 0xb4b: 0x0031,
	0xb4c: 0x0031, 0xb4d: 0x0031, 0xb4e: 0x0031, 0xb4f: 0x0031, 0xb50: 0x0031, 0xb51: 0x0031,
	0xb52: 0x0031, 0xb53: 0x0031, 0xb54: 0x0031, 0xb55: 0x0031, 0xb56: 0x0031, 0xb57: 0x0031,
	0xb58: 0x0031, 0xb59: 0x0031, 0xb5a: 0x0031, 0xb5b: 0x0031, 0xb5c: 0x0031, 0xb5d: 0x0031,
	0xb5e: 0x0031, 0xb5f: 0x0031, 0xb60: 0x0031, 0xb61: 0x0031, 0xb62: 0x0031, 0xb63: 0x0031,
	0xb64: 0x0031, 0xb65: 0x0031, 0xb66: 0x0031, 0xb67: 0x0031, 0xb68: 0x0031, 0xb69: 0x0031,
	0xb6a: 0x0031, 0xb6b: 0x0031, 0xb6c: 0x0031, 0xb6d: 0x0031, 0xb6e: 0x0031, 0xb6f: 0x0031,
	0xb70: 0x0031, 0xb71: 0x0031, 0xb72: 0x0031, 0xb73: 0x0031, 0xb74: 0x0031, 0xb75: 0x0031,
	0xb76: 0x0031, 0xb77: 0x0031, 0xb78: 0x0031, 0xb79: 0x0031, 0xb7a: 0x0031, 0xb7b: 0x0031,
	0xb7c: 0x0031, 0xb7d: 0x0031,
	// Block 0x2e, offset 0xb80
	0xb86: 0x0020, 0xb87: 0x0020, 0xb88: 0x0020, 0xb89: 0x0021, 0xb8a: 0x0021, 0xb8b: 0x0031,
	0xb8c: 0x0031, 0xb8d: 0x0031, 0xb8e: 0x0031, 0xb8f: 0x0020, 0xb90: 0x0031, 0xb91: 0x0031,
	0xb92: 0x0031, 0xb93: 0x0031, 0xb94: 0x0031, 0xb95: 0x0031, 0xb96: 0x0031, 0xb97: 0x0031,
	0xb98: 0x0031, 0xb99: 0x0031, 0xb9a: 0x0031, 0xb9b: 0x0031, 0xb9c: 0x0031, 0xb9d: 0x0031,
	0xb9e: 0x0031, 0xb9f: 0x0031, 0xba0: 0x0031, 0xba1: 0x0031, 0xba2: 0x0031, 0xba3: 0x0031,
	0xba4: 0x0031, 0xba5: 0x0031, 0xba6: 0x0031, 0xba7: 0x0031, 0xba8: 0x0020, 0xba9: 0x0020,
	0xbaa: 0x0020, 0xbab: 0x0020, 0xbac: 0x0020, 0xbad: 0x0020, 0xbae: 0x0020, 0xbaf: 0x0021,
	0xbb0: 0x0021, 0xbb1: 0x0020, 0xbb2: 0x0020, 0xbb3: 0x0021, 0xbb4: 0x0029, 0xbb5: 0x0029,
	0xbb6: 0x0021, 0xbb7: 0x0021, 0xbb8: 0x0021, 0xbb9: 0x0021, 0xbba: 0x0039, 0xbbb: 0x0020,
	0xbbc: 0x0020, 0xbbd: 0x0020, 0xbbe: 0x0020, 0xbbf: 0x0020,
	// Block 0x2f, offset 0xbc0
	0xbc0: 0x0020, 0xbc1: 0x0020, 0xbc2: 0x0020, 0xbc3: 0x0020, 0xbc4: 0x0020, 0xbc5: 0x0020,
	0xbc6: 0x0020, 0xbc7: 0x0021, 0xbc8: 0x0020, 0xbc9: 0x0020, 0xbca: 0x0021, 0xbcb: 0x0021,
	0xbcc: 0x0021, 0xbcd: 0x0021, 0xbce: 0x0020, 0xbcf: 0x0020, 0xbd0: 0x0029, 0xbd1: 0x0020,
	0xbd2: 0x0020, 0xbd3: 0x0020, 0xbd4: 0x0020, 0xbd5: 0x0039, 0xbd6: 0x0039, 0xbd7: 0x0020,
	0xbd8: 0x0020, 0xbd9: 0x0020, 0xbda: 0x0020, 0xbdb: 0x0020, 0xbdc: 0x0020, 0xbdd: 0x0020,
	0xbde: 0x0020, 0xbdf: 0x0020, 0xbe0: 0x0020, 0xbe1: 0x0020, 0xbe2: 0x0020, 0xbe3: 0x0020,
	0xbe4: 0x0031, 0xbe5: 0x0021, 0xbe6: 0x0020, 0xbe7: 0x0020, 0xbe8: 0x0021, 0xbe9: 0x0020,
	0xbea: 0x0020, 0xbeb: 0x0020, 0xbec: 0x0020, 0xbed: 0x0020, 0xbee: 0x0020, 0xbef: 0x0020,
	0xbf0: 0x0020, 0xbf1: 0x0021, 0xbf2: 0x0021, 0xbf3: 0x0020, 0xbf4: 0x0020, 0xbf5: 0x0020,
	0xbf6: 0x0020, 0xbf7: 0x0020, 0xbf8: 0x0020, 0xbf9: 0x0020, 0xbfa: 0x0020, 0xbfb: 0x0020,
	0xbfc: 0x0021, 0xbfd: 0x0020, 0xbfe: 0x0020, 0xbff: 0x0020,
	// Block 0x30, offset 0xc00
	0xc00: 0x0020, 0xc01: 0x0020, 0xc02: 0x0021, 0xc03: 0x0021, 0xc04: 0x0021, 0xc05: 0x0020,
	0xc06: 0x0020, 0xc07: 0x0020, 0xc08: 0x0020, 0xc09: 0x0020, 0xc0a: 0x0020, 0xc0b: 0x0020,
	0xc0c: 0x0020, 0xc0d: 0x0020, 0xc0e: 0x0020, 0xc0f: 0x0020, 0xc10: 0x0020, 0xc11: 0x0021,
	0xc12: 0x0021, 0xc13: 0x0021, 0xc14: 0x0020, 0xc15: 0x0020, 0xc16: 0x0020, 0xc17: 0x0020,
	0xc18: 0x0020, 0xc19: 0x0020, 0xc1a: 0x0020, 0xc1b: 0x0020, 0xc1c: 0x0021, 0xc1d: 0x0021,
	0xc1e: 0x0021, 0xc1f: 0x0020, 0xc20: 0x0020, 0xc21: 0x0021, 0xc22: 0x0020, 0xc23: 0x0021,
	0xc24: 0x0020, 0xc25: 0x0020, 0xc26: 0x0020, 0xc27: 0x0020, 0xc28: 0x0021, 0xc29: 0x0020,
	0xc2a: 0x0020, 0xc2b: 0x0020, 0xc2c: 0x0020, 0xc2d: 0x0020, 0xc2e: 0x0020, 0xc2f: 0x0021,
	0xc30: 0x0020, 0xc31: 0x0020, 0xc32: 0x0020, 0xc33: 0x0021, 0xc34: 0x0020, 0xc35: 0x0020,
	0xc36: 0x0020, 0xc37: 0x0020, 0xc38: 0x0020, 0xc39: 0x0020, 0xc3a: 0x0021, 0xc3b: 0x0031,
	0xc3c: 0x0031, 0xc3d: 0x0031, 0xc3e: 0x0031, 0xc3f: 0x0031,
	// Block 0x31, offset 0xc40
	0xc40: 0x0031, 0xc41: 0x0031, 0xc42: 0x0031, 0xc43: 0x0031, 0xc44: 0x0031, 0xc45: 0x0031,
	0xc46: 0x0031, 0xc47: 0x0031, 0xc48: 0x0031, 0xc49: 0x0031, 0xc4a: 0x0031, 0xc4b: 0x0031,
	0xc4c: 0x0031, 0xc4d: 0x0031, 0xc4e: 0x0031, 0xc4f: 0x0031, 0xc50: 0x0031, 0xc51: 0x0031,
	0xc52: 0x0031, 0xc53: 0x0031, 0xc54: 0x0031, 0xc55: 0x0031, 0xc56: 0x0031, 0xc57: 0x0031,
	0xc58: 0x0031, 0xc59: 0x0031, 0xc5a: 0x0031, 0xc5b: 0x0031, 0xc5c: 0x0031, 0xc5d: 0x0031,
	0xc5e: 0x0031, 0xc5f: 0x0031, 0xc60: 0x0031, 0xc61: 0x0031, 0xc62: 0x0031, 0xc63: 0x0031,
	0xc64: 0x0031, 0xc65: 0x0031, 0xc66: 0x0031, 0xc67: 0x0031, 0xc68: 0x0031, 0xc69: 0x0031,
	0xc6a: 0x0031, 0xc6b: 0x0031, 0xc6c: 0x0031, 0xc6d: 0x0031, 0xc6e: 0x0031, 0xc6f: 0x0031,
	0xc70: 0x0031, 0xc71: 0x0031, 0xc72: 0x0031, 0xc73: 0x0031, 0xc74: 0x0031, 0xc75: 0x0031,
	0xc76: 0x0031, 0xc77: 0x0031, 0xc78: 0x0031, 0xc79: 0x0031, 0xc7a: 0x0031, 0xc7b: 0x0031,
	0xc7c: 0x0031, 0xc7d: 0x0031, 0xc7e: 0x0031, 0xc7f: 0x0031,
	// Block 0x32, offset 0xc80
	0xc80: 0x0031, 0xc81: 0x0031, 0xc82: 0x0031, 0xc83: 0x0031, 0xc84: 0x0031, 0xc85: 0x0039,
	0xc86: 0x0039, 0xc87: 0x0039, 0xc88: 0x0031, 0xc89: 0x0031, 0xc8a: 0x0031, 0xc8b: 0x0039,
	0xc8c: 0x0039, 0xc8d: 0x0039, 0xc8e: 0x0039, 0xc8f: 0x0039,
	// Block 0x33, offset 0xcc0
	0xcc0: 0x0031, 0xcc1: 0x0031, 0xcc2: 0x0031, 0xcc3: 0x0031, 0xcc4: 0x0031, 0xcc5: 0x0031,
	0xcc6: 0x0031, 0xcc7: 0x0031, 0xcc8: 0x0031, 0xcc9: 0x0031, 0xcca: 0x0031, 0xccb: 0x0031,
	0xccc: 0x0031, 0xccd: 0x0031, 0xcce: 0x0031, 0xccf: 0x0031, 0xcd0: 0x0031, 0xcd1: 0x0031,
	0xcd2: 0x0031, 0xcd3: 0x0031, 0xcd4: 0x0031, 0xcd5: 0x0031, 0xcd6: 0x0031, 0xcd7: 0x0031,
	0xcd8: 0x0031, 0xcd9: 0x0031, 0xcda: 0x0031, 0xcdb: 0x0031, 0xcdc: 0x0031, 0xcdd: 0x0031,
	0xcde: 0x0031, 0xcdf: 0x0031, 0xce0: 0x0031, 0xce1: 0x0031, 0xce2: 0x0031, 0xce3: 0x0039,
	0xce4: 0x0031, 0xce5: 0x0031, 0xce6: 0x0031, 0xce7: 0x0031, 0xce8: 0x0031, 0xce9: 0x0031,
	0xcea: 0x0031, 0xceb: 0x0031, 0xcec: 0x0031, 0xced: 0x0031, 0xcee: 0x0031, 0xcef: 0x0031,
	0xcf0: 0x0031, 0xcf1: 0x0031, 0xcf2: 0x0031, 0xcf3: 0x0031, 0xcf4: 0x0039, 0xcf5: 0x0039,
	0xcf6: 0x0039, 0xcf7: 0x0031, 0xcf8: 0x0031, 0xcf9: 0x0031, 0xcfa: 0x0031, 0xcfb: 0x0031,
	0xcfc: 0x0031, 0xcfd: 0x0031, 0xcfe: 0x0031, 0xcff: 0x0031,
	// Block 0x34, offset 0xd00
	0xd00: 0x0039, 0xd01: 0x0031, 0xd02: 0x0031, 0xd03: 0x0031, 0xd04: 0x0031, 0xd05: 0x0031,
	0xd06: 0x0020, 0xd07: 0x0020, 0xd08: 0x0020, 0xd09: 0x0020, 0xd0a: 0x0020, 0xd0b: 0x0021,
	0xd0c: 0x0039, 0xd0d: 0x0021, 0xd0e: 0x0021, 0xd0f: 0x0021, 0xd10: 0x0031, 0xd11: 0x0031,
	0xd12: 0x0031, 0xd13: 0x0020, 0xd14: 0x0020, 0xd15: 0x0031, 0xd16: 0x0020, 0xd17: 0x0020,
	0xd18: 0x0020, 0xd19: 0x0020, 0xd1a: 0x0020, 0xd1b: 0x0020, 0xd1c: 0x0020, 0xd1d: 0x0020,
	0xd1e: 0x0020, 0xd1f: 0x0020, 0xd20: 0x0021, 0xd21: 0x0021, 0xd22: 0x0021, 0xd23: 0x0021,
	0xd24: 0x0021, 0xd25: 0x0021, 0xd26: 0x0020, 0xd27: 0x0020, 0xd28: 0x0020, 0xd29: 0x0021,
	0xd2a: 0x0020, 0xd2b: 0x0031, 0xd2c: 0x0031, 0xd2d: 0x0020, 0xd2e: 0x0020, 0xd2f: 0x0020,
	0xd30: 0x0021, 0xd31: 0x0020, 0xd32: 0x0020, 0xd33: 0x0021, 0xd34: 0x0031, 0xd35: 0x0031,
	0xd36: 0x0031, 0xd37: 0x0031, 0xd38: 0x0031, 0xd39: 0x0031, 0xd3a: 0x0031, 0xd3b: 0x0020,
	0xd3c: 0x0020, 0xd3d: 0x0020, 0xd3e: 0x0020, 0xd3f: 0x0020,
	// Block 0x35, offset 0xd40
	0xd74: 0x0020, 0xd75: 0x0020,
	0xd76: 0x0020, 0xd77: 0x0020, 0xd78: 0x0020, 0xd79: 0x0020, 0xd7a: 0x0020, 0xd7b: 0x0020,
	0xd7c: 0x0020, 0xd7d: 0x0020, 0xd7e: 0x0020, 0xd7f: 0x0020,
	// Block 0x36, offset 0xd80
	0xd95: 0x0020, 0xd96: 0x0020, 0xd97: 0x0020,
	0xd98: 0x0020, 0xd99: 0x0020, 0xd9a: 0x0020, 0xd9b: 0x0020, 0xd9c: 0x0020, 0xd9d: 0x0020,
	0xd9e: 0x0020, 0xd9f: 0x0020, 0xda0: 0x0031, 0xda1: 0x0031, 0xda2: 0x0031, 0xda3: 0x0031,
	0xda4: 0x0031, 0xda5: 0x0031, 0xda6: 0x0031, 0xda7: 0x0031, 0xda8: 0x0031, 0xda9: 0x0031,
	0xdaa: 0x0031, 0xdab: 0x0031, 0xdac: 0x0020, 0xdad: 0x0020, 0xdae: 0x0020, 0xdaf: 0x0020,
	0xdb0: 0x0020, 0xdb1: 0x0020, 0xdb2: 0x0020, 0xdb3: 0x0020, 0xdb4: 0x0020, 0xdb5: 0x0020,
	0xdb6: 0x0020, 0xdb7: 0x0020, 0xdb8: 0x0020, 0xdb9: 0x0020, 0xdba: 0x0020, 0xdbb: 0x0020,
	0xdbc: 0x0020, 0xdbd: 0x0020, 0xdbe: 0x0020, 0xdbf: 0x0020,
	// Block 0x37, offset 0xdc0
	0xdcc: 0x0020, 0xdcd: 0x0020, 0xdce: 0x0020, 0xdcf: 0x0020,
	// Block 0x38, offset 0xe00
	0xe08: 0x0020, 0xe09: 0x0020, 0xe0a: 0x0020, 0xe0b: 0x0020,
	0xe0c: 0x0020, 0xe0d: 0x0020, 0xe0e: 0x0020, 0xe0f: 0x0020,
	0xe1a: 0x0020, 0xe1b: 0x0020, 0xe1c: 0x0020, 0xe1d: 0x0020,
	0xe1e: 0x0020, 0xe1f: 0x0020,
	// Block 0x39, offset 0xe40
	0xe48: 0x0020, 0xe49: 0x0020, 0xe4a: 0x0020, 0xe4b: 0x0020,
	0xe4c: 0x0020, 0xe4d: 0x0020, 0xe4e: 0x0020, 0xe4f: 0x0020,
	0xe6e: 0x0020, 0xe6f: 0x0020,
	0xe70: 0x0020, 0xe71: 0x0020, 0xe72: 0x0020, 0xe73: 0x0020, 0xe74: 0x0020, 0xe75: 0x0020,
	0xe76: 0x0020, 0xe77: 0x0020, 0xe78: 0x0020, 0xe79: 0x0020, 0xe7a: 0x0020, 0xe7b: 0x0020,
	0xe7c: 0x0020, 0xe7d: 0x0020, 0xe7e: 0x0020, 0xe7f: 0x0020,
	// Block 0x3a, offset 0xe80
	0xe8c: 0x0020, 0xe8d: 0x0031, 0xe8e: 0x0031, 0xe8f: 0x0039, 0xe90: 0x0031, 0xe91: 0x0031,
	0xe92: 0x0031, 0xe93: 0x0031, 0xe94: 0x0031, 0xe95: 0x0031, 0xe96: 0x0031, 0xe97: 0x0031,
	0xe98: 0x0039, 0xe99: 0x0039, 0xe9a: 0x0039, 0xe9b: 0x0039, 0xe9c: 0x0039, 0xe9d: 0x0039,
	0xe9e: 0x0039, 0xe9f: 0x0039, 0xea0: 0x0031, 0xea1: 0x0031, 0xea2: 0x0031, 0xea3: 0x0031,
	0xea4: 0x0031, 0xea5: 0x0031, 0xea6: 0x0039, 0xea7: 0x0031, 0xea8: 0x0031, 0xea9: 0x0031,
	0xeaa: 0x0031, 0xeab: 0x0031, 0xeac: 0x0031, 0xead: 0x0031, 0xeae: 0x0031, 0xeaf: 0x0031,
	0xeb0: 0x0039, 0xeb1: 0x0039, 0xeb2: 0x0039, 0xeb3: 0x0039, 0xeb4: 0x0039, 0xeb5: 0x0039,
	0xeb6: 0x0039, 0xeb7: 0x0039, 0xeb8: 0x0039, 0xeb9: 0x0039, 0xeba: 0x0031,
	0xebc: 0x0039, 0xebd: 0x0039, 0xebe: 0x0039, 0xebf: 0x0031,
	// Block 0x3b, offset 0xec0
	0xec0: 0x0031, 0xec1: 0x0031, 0xec2: 0x0031, 0xec3: 0x0031, 0xec4: 0x0031, 0xec5: 0x0031,
	0xec7: 0x0031, 0xec8: 0x0031, 0xec9: 0x0031, 0xeca: 0x0031, 0xecb: 0x0031,
	0xecc: 0x0031, 0xecd: 0x0031, 0xece: 0x0031, 0xecf: 0x0031, 0xed0: 0x0031, 0xed1: 0x0031,
	0xed2: 0x0031, 0xed3: 0x0031, 0xed4: 0x0031, 0xed5: 0x0031, 0xed6: 0x0031, 0xed7: 0x0031,
	0xed8: 0x0031, 0xed9: 0x0031, 0xeda: 0x0031, 0xedb: 0x0031, 0xedc: 0x0031, 0xedd: 0x0031,
	0xede: 0x0031, 0xedf: 0x0031, 0xee0: 0x0031, 0xee1: 0x0031, 0xee2: 0x0031, 0xee3: 0x0031,
	0xee4: 0x0031, 0xee5: 0x0031, 0xee6: 0x0031, 0xee7: 0x0031, 0xee8: 0x0031, 0xee9: 0x0031,
	0xeea: 0x0031, 0xeeb: 0x0031, 0xeec: 0x0031, 0xeed: 0x0031, 0xeee: 0x0031, 0xeef: 0x0031,
	0xef0: 0x0031, 0xef1: 0x0031, 0xef2: 0x0020, 0xef3: 0x0031, 0xef4: 0x0031, 0xef5: 0x0031,
	0xef6: 0x0031, 0xef7: 0x0020, 0xef8: 0x0020, 0xef9: 0x0020, 0xefa: 0x0031, 0xefb: 0x0031,
	0xefc: 0x0031, 0xefd: 0x0031, 0xefe: 0x0031, 0xeff: 0x0031,
	// Block 0x3c, offset 0xf00
	0xf00: 0x0031, 0xf01: 0x0031, 0xf02: 0x0031, 0xf03: 0x0031, 0xf04: 0x0031, 0xf05: 0x0031,
	0xf06: 0x0031, 0xf07: 0x0031, 0xf08: 0x0031, 0xf09: 0x0031, 0xf0a: 0x0031, 0xf0b: 0x0031,
	0xf0c: 0x0031, 0xf0d: 0x0031, 0xf0e: 0x0031, 0xf0f: 0x0031, 0xf10: 0x0031, 0xf11: 0x0031,
	0xf12: 0x0031, 0xf13: 0x0031, 0xf14: 0x0031, 0xf15: 0x0031, 0xf16: 0x0031, 0xf17: 0x0031,
	0xf18: 0x0031, 0xf19: 0x0031, 0xf1a: 0x0031, 0xf1b: 0x0031, 0xf1c: 0x0031, 0xf1d: 0x0031,
	0xf1e: 0x0031, 0xf1f: 0x0031, 0xf20: 0x0031, 0xf21: 0x0031, 0xf22: 0x0031, 0xf23: 0x0020,
	0xf24: 0x0020, 0xf25: 0x0031, 0xf26: 0x0031, 0xf27: 0x0031, 0xf28: 0x0031, 0xf29: 0x0031,
	0xf2a: 0x0031, 0xf2b: 0x0020, 0xf2c: 0x0020, 0xf2d: 0x0020, 0xf2e: 0x0031, 0xf2f: 0x0031,
	0xf30: 0x0033, 0xf31: 0x0033, 0xf32: 0x0033, 0xf33: 0x0033, 0xf34: 0x0031, 0xf35: 0x0039,
	0xf36: 0x0039, 0xf37: 0x0031, 0xf38: 0x0039, 0xf39: 0x0039, 0xf3a: 0x0031, 0xf3b: 0x0039,
	0xf3c: 0x0031, 0xf3d: 0x0031, 0xf3e: 0x0031, 0xf3f: 0x0031,
	// Block 0x3d, offset 0xf40
	0xf40: 0x0031, 0xf41: 0x0031, 0xf42: 0x0031, 0xf43: 0x0031, 0xf44: 0x0031, 0xf45: 0x0031,
	0xf46: 0x0031, 0xf47: 0x0031, 0xf48: 0x0031, 0xf49: 0x0031, 0xf4a: 0x0031, 0xf4b: 0x0020,
	0xf4c: 0x0020, 0xf4d: 0x0039, 0xf4e: 0x0039, 0xf4f: 0x0039, 0xf50: 0x0031, 0xf51: 0x0039,
	0xf52: 0x0039, 0xf53: 0x0039, 0xf54: 0x0039, 0xf55: 0x0039, 0xf56: 0x0039, 0xf57: 0x0039,
	0xf58: 0x0039, 0xf59: 0x0039, 0xf5a: 0x0039, 0xf5b: 0x0039, 0xf5c: 0x0039, 0xf5d: 0x0039,
	0xf5e: 0x0031, 0xf5f: 0x0031, 0xf60: 0x0031, 0xf61: 0x0031, 0xf62: 0x0031, 0xf63: 0x0031,
	0xf64: 0x0031, 0xf65: 0x0031, 0xf66: 0x0031, 0xf67: 0x0031, 0xf68: 0x0031, 0xf69: 0x0031,
	0xf6a: 0x0031, 0xf6b: 0x0031, 0xf6c: 0x0031, 0xf6d: 0x0031, 0xf6e: 0x0031, 0xf6f: 0x0031,
	0xf70: 0x0031, 0xf71: 0x0031, 0xf72: 0x0031, 0xf73: 0x0031, 0xf74: 0x0031, 0xf75: 0x0031,
	0xf76: 0x0031, 0xf77: 0x0031, 0xf78: 0x0031, 0xf79: 0x0031, 0xf7a: 0x0031, 0xf7b: 0x0031,
	0xf7c: 0x0031, 0xf7d: 0x0031, 0xf7e: 0x0031, 0xf7f: 0x0031,
	// Block 0x3e, offset 0xf80
	0xf80: 0x0020, 0xf81: 0x0020, 0xf82: 0x0020, 0xf83: 0x0020, 0xf84: 0x0020, 0xf85: 0x0020,
	0xf86: 0x0020, 0xf87: 0x0020, 0xf88: 0x0020, 0xf89: 0x0020, 0xf8a: 0x0020, 0xf8b: 0x0020,
	0xf8c: 0x0020, 0xf8d: 0x0020, 0xf8e: 0x0020, 0xf8f: 0x0020, 0xf90: 0x0020, 0xf91: 0x0020,
	0xf92: 0x0020, 0xf93: 0x0020, 0xf94: 0x0020, 0xf95: 0x0020, 0xf96: 0x0020, 0xf97: 0x0020,
	0xf98: 0x0020, 0xf99: 0x0020, 0xf9a: 0x0020, 0xf9b: 0x0020, 0xf9c: 0x0020, 0xf9d: 0x0020,
	0xf9e: 0x0020, 0xf9f: 0x0020, 0xfa0: 0x0020, 0xfa1: 0x0020, 0xfa2: 0x0020, 0xfa3: 0x0020,
	0xfa4: 0x0020, 0xfa5: 0x0020, 0xfa6: 0x0020, 0xfa7: 0x0020, 0xfa8: 0x0020, 0xfa9: 0x0020,
	0xfaa: 0x0020, 0xfab: 0x0020, 0xfac: 0x0020, 0xfad: 0x0020, 0xfae: 0x0020, 0xfaf: 0x0020,
	0xfb0: 0x0031, 0xfb1: 0x0031, 0xfb2: 0x0031, 0xfb3: 0x0031, 0xfb4: 0x0020, 0xfb5: 0x0020,
	0xfb6: 0x0020, 0xfb7: 0x0020, 0xfb8: 0x0031, 0xfb9: 0x0031, 0xfba: 0x0031, 0xfbb: 0x0020,
	0xfbc: 0x0020, 0xfbd: 0x0020, 0xfbe: 0x0020, 0xfbf: 0x0020,
	// Block 0x3f, offset 0xfc0
	0xfc0: 0x0031, 0xfc1: 0x0031, 0xfc2: 0x0031, 0xfc3: 0x0020, 0xfc4: 0x0020, 0xfc5: 0x0020,
	0xfc6: 0x0020, 0xfc7: 0x0020, 0xfc8: 0x0020, 0xfc9: 0x0020, 0xfca: 0x0020, 0xfcb: 0x0020,
	0xfcc: 0x0020, 0xfcd: 0x0020, 0xfce: 0x0020, 0xfcf: 0x0020, 0xfd0: 0x0031, 0xfd1: 0x0031,
	0xfd2: 0x0031, 0xfd3: 0x0031, 0xfd4: 0x0031, 0xfd5: 0x0031, 0xfd6: 0x0020, 0xfd7: 0x0020,
	0xfd8: 0x0020, 0xfd9: 0x0020, 0xfda: 0x0020, 0xfdb: 0x0020, 0xfdc: 0x0020, 0xfdd: 0x0020,
	0xfde: 0x0020, 0xfdf: 0x0020, 0xfe0: 0x0020, 0xfe1: 0x0020, 0xfe2: 0x0020, 0xfe3: 0x0020,
	0xfe4: 0x0020, 0xfe5: 0x0020, 0xfe6: 0x0020, 0xfe7: 0x0020, 0xfe8: 0x0020, 0xfe9: 0x0020,
	0xfea: 0x0020, 0xfeb: 0x0020, 0xfec: 0x0020, 0xfed: 0x0020, 0xfee: 0x0020, 0xfef: 0x0020,
	0xff0: 0x0020, 0xff1: 0x0020, 0xff2: 0x0020, 0xff3: 0x0020, 0xff4: 0x0020, 0xff5: 0x0020,
	0xff6: 0x0020, 0xff7: 0x0020, 0xff8: 0x0020, 0xff9: 0x0020, 0xffa: 0x0020, 0xffb: 0x0020,
	0xffc: 0x0020, 0xffd: 0x0020, 0xffe: 0x0020, 0xfff: 0x0020,
	// Block 0x40, offset 0x1000
	0x1000: 0x0020, 0x1001: 0x0020, 0x1002: 0x0020, 0x1003: 0x0020, 0x1004: 0x0020, 0x1005: 0x0020,
	0x1006: 0x0020, 0x1007: 0x0020, 0x1008: 0x0020, 0x1009: 0x0020, 0x100a: 0x0020, 0x100b: 0x0020,
	0x100c: 0x0020, 0x100d: 0x0020, 0x100e: 0x0020, 0x100f: 0x0020, 0x1010: 0x0020, 0x1011: 0x0020,
	0x1012: 0x0020, 0x1013: 0x0020, 0x1014: 0x0020, 0x1015: 0x0020, 0x1016: 0x0020, 0x1017: 0x0020,
	0x1018: 0x0020, 0x1019: 0x0020, 0x101a: 0x0020, 0x101b: 0x0020, 0x101c: 0x0020, 0x101d: 0x0020,
	0x101e: 0x0020, 0x101f: 0x0020, 0x1020: 0x0020, 0x1021: 0x0020, 0x1022: 0x0020, 0x1023: 0x0020,
	0x1024: 0x0020, 0x1025: 0x0020, 0x1026: 0x0020, 0x1027: 0x0020, 0x1028: 0x0020, 0x1029: 0x0020,
	0x102a: 0x0020, 0x102b: 0x0020, 0x102c: 0x0020, 0x102d: 0x0020, 0x102e: 0x0020, 0x102f: 0x0020,
	0x1030: 0x0020, 0x1031: 0x0020, 0x1032: 0x0020, 0x1033: 0x0020, 0x1034: 0x0020, 0x1035: 0x0020,
	0x1036: 0x0020, 0x1037: 0x0020, 0x1038: 0x0020, 0x1039: 0x0020, 0x103a: 0x0020, 0x103b: 0x0020,
	0x103c: 0x0020, 0x103d: 0x0020,
	// Block 0x41, offset 0x1040
	0x1060: 0x0002, 0x1061: 0x0002, 0x1062: 0x0002, 0x1063: 0x0002,
	0x1064: 0x0002, 0x1065: 0x0002, 0x1066: 0x0002, 0x1067: 0x0002, 0x1068: 0x0002, 0x1069: 0x0002,
	0x106a: 0x0002, 0x106b: 0x0002, 0x106c: 0x0002, 0x106d: 0x0002, 0x106e: 0x0002, 0x106f: 0x0002,
	0x1070: 0x0002, 0x1071: 0x0002, 0x1072: 0x0002, 0x1073: 0x0002, 0x1074: 0x0002, 0x1075: 0x0002,
	0x1076: 0x0002, 0x1077: 0x0002, 0x1078: 0x0002, 0x1079: 0x0002, 0x107a: 0x0002, 0x107b: 0x0002,
	0x107c: 0x0002, 0x107d: 0x0002, 0x107e: 0x0002, 0x107f: 0x0002,
	// Block 0x42, offset 0x1080
	0x1080: 0x0002, 0x1081: 0x0002, 0x1082: 0x0002, 0x1083: 0x0002, 0x1084: 0x0002, 0x1085: 0x0002,
	0x1086: 0x0002, 0x1087: 0x0002, 0x1088: 0x0002, 0x1089: 0x0002, 0x108a: 0x0002, 0x108b: 0x0002,
	0x108c: 0x0002, 0x108d: 0x0002, 0x108e: 0x0002, 0x108f: 0x0002, 0x1090: 0x0002, 0x1091: 0x0002,
	0x1092: 0x0002, 0x1093: 0x0002, 0x1094: 0x0002, 0x1095: 0x0002, 0x1096: 0x0002, 0x1097: 0x0002,
	0x1098: 0x0002, 0x1099: 0x0002, 0x109a: 0x0002, 0x109b: 0x0002, 0x109c: 0x0002, 0x109d: 0x0002,
	0x109e: 0x0002, 0x109f: 0x0002, 0x10a0: 0x0002, 0x10a1: 0x0002, 0x10a2: 0x0002, 0x10a3: 0x0002,
	0x10a4: 0x0002, 0x10a5: 0x0002, 0x10a6: 0x0002, 0x10a7: 0x0002, 0x10a8: 0x0002, 0x10a9: 0x0002,
	0x10aa: 0x0002, 0x10ab: 0x0002, 0x10ac: 0x0002, 0x10ad: 0x0002, 0x10ae: 0x0002, 0x10af: 0x0002,
	0x10b0: 0x0002, 0x10b1: 0x0002, 0x10b2: 0x0002, 0x10b3: 0x0002, 0x10b4: 0x0002, 0x10b5: 0x0002,
	0x10b6: 0x0002, 0x10b7: 0x0002, 0x10b8: 0x0002, 0x10b9: 0x0002, 0x10ba: 0x0002, 0x10bb: 0x0002,
	0x10bc: 0x0002, 0x10bd: 0x0002, 0x10be: 0x0002, 0x10bf: 0x0002,
}

// emojiIndex: 11 blocks, 704 entries, 704 bytes
// Block 0 is the zero block.
var emojiIndex = [704]uint8{
	// Block 0x0, offset 0x0
	// Block 0x1, offset 0x40
	// Block 0x2, offset 0x80
	// Block 0x3, offset 0xc0
	0xc2: 0x01,
	0xe2: 0x02, 0xe3: 0x03,
	0xef: 0x04,
	0xf0: 0x06, 0xf3: 0x08,
	// Block 0x4, offset 0x100
	0x100: 0x02, 0x101: 0x03, 0x103: 0x04, 0x104: 0x05, 0x106: 0x06,
	0x10c: 0x07, 0x10e: 0x08, 0x10f: 0x09,
	0x113: 0x0a, 0x116: 0x0b, 0x117: 0x0c,
	0x118: 0x0d, 0x119: 0x0e, 0x11a: 0x0f, 0x11b: 0x10, 0x11c: 0x11, 0x11d: 0x12, 0x11e: 0x13,
	0x124: 0x14,
	0x12c: 0x15, 0x12d: 0x16,
	// Block 0x5, offset 0x140
	0x140: 0x17,
	0x14a: 0x18,
	// Block 0x6, offset 0x180
	0x1b8: 0x19,
	// Block 0x7, offset 0x1c0
	0x1c0: 0x1a, 0x1c1: 0x1b, 0x1c2: 0x1b, 0x1c3: 0x1c, 0x1c4: 0x1d, 0x1c5: 0x1e, 0x1c6: 0x1f, 0x1c7: 0x20,
	0x1c8: 0x21, 0x1c9: 0x22, 0x1ca: 0x1b, 0x1cb: 0x1b, 0x1cc: 0x23, 0x1cd: 0x24, 0x1ce: 0x25, 0x1cf: 0x26,
	0x1d0: 0x27, 0x1d1: 0x28, 0x1d2: 0x29, 0x1d3: 0x2a, 0x1d4: 0x2b, 0x1d5: 0x2c, 0x1d6: 0x2d, 0x1d7: 0x2e,
	0x1d8: 0x2f, 0x1d9: 0x30, 0x1da: 0x31, 0x1db: 0x32, 0x1dd: 0x33, 0x1df: 0x34,
	0x1e0: 0x35, 0x1e1: 0x36, 0x1e2: 0x37, 0x1e3: 0x1b, 0x1e4: 0x38, 0x1e5: 0x39, 0x1e6: 0x3a, 0x1e7: 0x3b,
	0x1e8: 0x1b, 0x1e9: 0x3c, 0x1ea: 0x3d, 0x1eb: 0x1b, 0x1ec: 0x1b, 0x1ed: 0x1b, 0x1ee: 0x1b, 0x1ef: 0x1b,
	0x1f0: 0x1b, 0x1f1: 0x1b, 0x1f2: 0x1b, 0x1f3: 0x1b, 0x1f4: 0x1b, 0x1f5: 0x1b, 0x1f6: 0x1b, 0x1f7: 0x1b,
	0x1f8: 0x1b, 0x1f9: 0x1b, 0x1fa: 0x1b, 0x1fb: 0x1b, 0x1fc: 0x1b, 0x1fd: 0x1b, 0x1fe: 0x1b, 0x1ff: 0x3e,
	// Block 0x8, offset 0x200
	0x21f: 0x05,
	// Block 0x9, offset 0x240
	0x240: 0x3f, 0x241: 0x40,
	// Block 0xa, offset 0x280
	0x2a0: 0x07,
}
